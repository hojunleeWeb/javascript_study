console.log(score);

score = 80;
var score;

console.log(score);

//javascript에서 변수의 선언은 소스코드가 순차적으로 실행되는 런타임 이전 단계에서 먼저 실행된다
//이를 변수 호이스팅 - variable hoisting이라고 한다.
//변수 호이스팅은 변수의 선언을 끌어올리는 것이지, 할당을 끌어올리는 것이 아니다.
//따라서 변수 선언 전에 변수를 사용하면 undefined가 출력된다.
//변수 선언과 할당을 동시에 하면 변수 호이스팅이 되어도 undefined가 출력되지 않는다.
//변수 선언은 런타임 이전에 실행되지만 값 할당은 런타임에 실행되어 원래 변수의 값 undefined에서 값 80으로 할당된다.(엄밀히 말하면 이것도 재할당이다.)

//변수는 저장된 값을 변화시킬 수 있기에 변수이다.
//반대로 값을 변화 시킬 수 없는 것이 있는데 이것을 상수 - constant라고 한다. -> constant의 선언은 const 키워드를 사용하며
//주로 상수를 선언하는데 사용하지만 그 외의 사용처도 존재한다.

//일관성을 유지하기 위해서 네이밍 컨벤션을 지켜야하는데 주로 변수나 함수의 이름에선 카멜 케이스(firstName)을 사용하고
//생성자 함수, 클래스의 이름에는 파스칼 케이스(FirstName)를 사용한다.
//상수의 이름은 대문자와 언더스코어를 사용한다.

//변수는 여러 타입으로 암묵적 강제 변환될 수 있다.

console.log(`1` + 2); //12
var x = 2;
if (x % 2) {
    //2 % 2 = 0이다. 이때 0은 false로 암묵적 강제 변환 된다.
    console.log(`홀수`);
} else {
    console.log(`짝수`);
}
